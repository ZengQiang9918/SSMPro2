<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zengqiang.dao.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.zengqiang.bean.Employee">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="did" jdbcType="INTEGER" property="did" />
  </resultMap>

  <!--自定义的resultMap-->
  <!--即时有字段相同也没事，毕竟用association隔开-->
  <resultMap id="WithDeptUserResultMap" type="com.zengqiang.bean.Employee">
    <id column="uid" property="uid"/>
    <result column="username" property="username"/>
    <result column="gender" property="gender"/>
    <result column="email" property="email"/>
    <result column="did" property="did"/>
    <association property="department" javaType="com.zengqiang.bean.Department">
      <id column="did" property="did"/>
      <result column="dname" property="dname"/>
    </association>
    <association property="user" javaType="com.zengqiang.bean.User">
      <id column="uid" property="uid"/>
      <result column="identity" property="identity"/>
      <result column="username" property="username"/>
      <result column="password" property="password"/>
    </association>
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uid, username, gender, email, did
  </sql>

  <!--自定义sql-->
  <sql id="WithDeptUser_Column_List">
    e.uid,e.username,e.gender,e.email,e.did,d.did,d.dname,
			 u.uid,u.identity,u.username,u.`password`
  </sql>

  <!--
    添加的方法
    List<Employee> selectByExampleWithDeptUser(EmployeeExample example);
    Employee selectByPrimaryKeyWithDeptUser(Integer uid);
  -->
  <select id="selectByPrimaryKeyWithDeptUser" parameterType="java.lang.Integer" resultMap="WithDeptUserResultMap">
    select
    <include refid="WithDeptUser_Column_List" />
    from t_emp e left join t_dept d
                  on e.did=d.did
                  left join t_usr u
                  on e.uid=u.uid
    where e.uid = #{uid,jdbcType=INTEGER}
  </select>

  <select id="selectByExampleWithDeptUser"
                   parameterType="com.zengqiang.bean.EmployeeExample" resultMap="WithDeptUserResultMap">
  select
  <if test="distinct">
    distinct
  </if>
  <include refid="WithDeptUser_Column_List" />
  from t_emp e left join t_dept d
  on e.did=d.did
  left join t_usr u
  on e.uid=u.uid
  <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
  </if>
  <if test="orderByClause != null">
    order by ${orderByClause}
  </if>
</select>



  <select id="selectByExample" parameterType="com.zengqiang.bean.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_emp
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_emp
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zengqiang.bean.EmployeeExample">
    delete from t_emp e
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zengqiang.bean.Employee">
    insert into t_emp (uid, username, gender, 
      email, did)
    values (#{uid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{email,jdbcType=VARCHAR}, #{did,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zengqiang.bean.Employee">
    insert into t_emp
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="did != null">
        did,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="did != null">
        #{did,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zengqiang.bean.EmployeeExample" resultType="java.lang.Long">
    select count(*) from t_emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_emp
    <set>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.did != null">
        did = #{record.did,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_emp
    set uid = #{record.uid,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      email = #{record.email,jdbcType=VARCHAR},
      did = #{record.did,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zengqiang.bean.Employee">
    update t_emp
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="did != null">
        did = #{did,jdbcType=INTEGER},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zengqiang.bean.Employee">
    update t_emp
    set username = #{username,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      did = #{did,jdbcType=INTEGER}
    where uid = #{uid,jdbcType=INTEGER}
  </update>

</mapper>